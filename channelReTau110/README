OpenFOAM-BenchmarkTest-channelReTau110
"OpenFOAM Benchmark Test for Channel Flow (Re_tau=110)"
Version 5

Creator: Masashi IMANO <masashi.imano@gmail.com>
Date: 11/May/2015
Supported OpenFOAM version: 2.3.0

1. 概要
================================================================================
channelReTau110 はオープンCAE学会V&V委員会OpenFOAMベンチマークテストWGで作成した，
チャンネル流れ(Re_tau=110)[1]を対象としたベンチマークテスト問題である．

--------------------------------------------------------------------------------
README       このファイル
bin/         スクリプト
src/         ソース
template/    channelReTau110のケースディレクトリ
FOCUS/       FOCUSでの設定例
OakleafFX10/ Oakleaf-FX10での設定例
NoBatch/     非バッチジョブシステムでの設定例
--------------------------------------------------------------------------------

2. 設定
================================================================================

2.1 ベンチマークケースのパラメータや関数の設定

ベンチマークケースのパラメータや関数は benchmark.conf で設定する．

2.1.1 nArray(格子数倍率nのベンチマークケース)

格子数倍率nは，格子数374400(nx=120,ny=65,nz=48)をベースにとした格子の倍数である．
ベンチマークケースnArrayの要素にはnを0埋めの5桁の整数値，かつ文字列形式で記述する．

--------------------------------------------------------------------------------
nArray=( "00001" "00002" "00004"  "00008" )
--------------------------------------------------------------------------------

標準条件: n=00008(格子数2995200=約3M)

2.1.2 mpiArray(MPI並列数mpiのベンチマークケース)

MPI並列数mpiのベンチマークケースmpiArrayの要素には，
mpiの値を0埋めの5桁の整数かつ文字列形式で記述する．

--------------------------------------------------------------------------------
mpiArray=( "00008" "00010" "00012" "00016" "00020" "00024" )
--------------------------------------------------------------------------------

標準条件: 無し．
ただし，並列化効率をみるために複数のMPI並列数で計算することを推奨．

2.1.3 simulationTypesArray(乱流モデルのベンチマークケース)

乱流モデルのベンチマークケースsimulationTypesArrayの要素には，
以下の形式の文字列を羅列する．
"(simulationTypesの値)-LESModel_(LESModelの値)-delta_(deltaの値)"

--------------------------------------------------------------------------------
simulationTypesArray=(\
  "laminar-LESModel_laminar-delta_cubeRootVol" \
  "LESModel-LESModel_Smagorinsky-delta_vanDriest" \
)
--------------------------------------------------------------------------------

標準条件: laminar-LESModel_laminar-delta_cubeRootVol
ただし，LESModel-LESModel_Smagorinsky-delta_vanDriest のケースも計算することを強く推奨．

2.1.4 solversArray(圧力に対する線型ソルバのベンチマークケース)

圧力に対する線型ソルバのベンチマークケースsolversArrayの要素には，
以下の形式の文字列を羅列する．
"PCG-preconditioner_(preconditionerの値)"
"GAMG-smoother_(smootherの値)"

--------------------------------------------------------------------------------
solversArray=(\
  "PCG-preconditioner_FDIC" \
  "PCG-preconditioner_DIC" \
  "PCG-preconditioner_diagonal" \
  "GAMG-smoother_DIC" \
  "GAMG-smoother_FDIC" \
  "GAMG-smoother_DICGaussSeidel" \
  "GAMG-smoother_GaussSeidel" \
  "GAMG-smoother_nonBlockingGaussSeidel" \
  "GAMG-smoother_symGaussSeidel" \
)
--------------------------------------------------------------------------------

標準条件: PCG-preconditioner_FDIC

2.1.5 MAX_NUMBER_OF_LOOP(ベンチマークテストの繰り返し数)

ベンチマークテストの繰り返し数を以下のように整数値で指定する．

--------------------------------------------------------------------------------
MAX_NUMBER_OF_LOOP=1
--------------------------------------------------------------------------------

標準条件: 1
ただし，計算機負荷にバラつきが大きい場合には，3以上繰り返す．

2.1.6 MAX_NUMBER_OF_QUEUE(バッチキューの最大値)

ベンチマークテストの実行スクリプトで投入可能なバッチキューの最大値を以下のように指定する．
バッチジョブシステムを使用しない場合には無視される．

--------------------------------------------------------------------------------
MAX_NUMBER_OF_QUEUE=1
--------------------------------------------------------------------------------

2.1.7 NumberOfBatchQueue(バッチキュー数を返す関数)

バッチキュー数を返す関数を定義する．

--------------------------------------------------------------------------------
NumberOfBatchQueue()
{
	nq=`squeue | wc -l`
	expr $nq - 1
}
--------------------------------------------------------------------------------

バッチジョブシステムを使用しない場合には以下のように定義する．

--------------------------------------------------------------------------------
NumberOfBatchQueue()
{
	# No operation
	rtn=""
}
--------------------------------------------------------------------------------

2.1.8 BatchSubmit(バッチジョブを投入する関数)

バッチジョブを投入する関数を定義する．

--------------------------------------------------------------------------------
BatchSubmit()
{
	local BATCHFILE=$1
	local MPI=$2

	sbatch -n $MPI $BATCHFILE
}
--------------------------------------------------------------------------------

バッチジョブシステムを使用しない場合には以下のように定義する．

--------------------------------------------------------------------------------
BatchSubmit()
{

	# No operation
	rtn=""
}
--------------------------------------------------------------------------------

2.2 バッチジョブスクリプトの設定

バッチジョブシステムを使用する場合には，batchScriptのディレクトリの中に以下の
バッチジョブスクリプトを作成する．

--------------------------------------------------------------------------------
batchScript/
  blockMesh.sh     blockMesh実行バッチジョブスクリプト
  decomposePar.sh  decomposePar実行バッチジョブスクリプト
  solve.sh         ソルバ実行バッチジョブスクリプト
--------------------------------------------------------------------------------

batchScriptのディレクトリが無い場合には，バッチジョブシステムを使用し
ないで，blockMesh，decomposeParやソルバが実行される．

3. ベンチマークケースの実行
================================================================================
3.1 ベンチマークケースの設定

channelReTau110のディレクトリの下に，ベンチマーク実行用のディレクトリ
を作成し，環境に合わせて適切にbenchmark.confを作成する．
また，バッチジョブシステムを使用する場合には，batchScriptのディレクト
リを作成し，適切にバッチジョブスクリプトを作成する．

3.2 ベンチマークケースの実行

ベンチマーク実行用のディレクトリ上で以下を実行する．

$ nohup ../bin/benchmark.sh >&  log.benchmark.sh &

3.3 ベンチマーク結果の集計

ベンチマーク実行用のディレクトリ上で以下を実行する．

$ ../bin/table.sh

ベンチマーク結果を集計したファイルtable.csvが作成される．

3.4 ベンチマーク結果のプロット

ベンチマーク実行用のディレクトリ上で以下のPythonスクリプトを実行する．

$ ../bin/plot.py

ベンチマーク結果をプロットしたファイル*.pdfが作成される．

なお，NumPy,PyLab,matplotlibのライブラリが必要である．

4. ベンチマーク結果の提供のお願い
================================================================================
ベンチマークテストを行なった場合には，以下のデータを提供をお願いする．

--------------------------------------------------------------------------------
ベンチマーク実行用のディレクトリ/
  benchmark.conf     ベンチマークケースのパラメータや関数の設定
  table.csv          ベンチマー結果を集計したファイル
  batchScript/*.sh   バッチジョブスクリプト(バッチジョブシステムの場合)
  n_*/mpi_*/simulationType_*/log.*[0-9]
                     各ベンチマークケースでのソルバーのログ
  n_*/mpi_*/simulationType_*/log.*[0-9].*.txt
                     各ベンチマークケースでのプロファイラ結果(もしあれば)
--------------------------------------------------------------------------------

ハードウェア情報
--------------------------------------------------------------------------------
ハードウェア名称: (例: NEC Express5800/HR120a-1)
CPUの種別: (例: Intel Xeon CPU E5-2680 v2)
CPUの周波数: (例: 2.80GHz)
コア数/CPU: (例: 10)
CPU数/ノード: (例: 2)
メモリ量/ノード: (例: 28GB)
インターフェース種別: (例: FDR-InfiniBand(56Gbps)) 
インターフェース数/ノード: (例: 1基) 
インターフェース・スループット/基: (例: 56Gbps) 
その他特記事項:
--------------------------------------------------------------------------------

ソフトウェア情報
--------------------------------------------------------------------------------
OpenFOAMのバージョン: (例: 2.3.0)
ビルドに使用したコンパイラ: (例: Gcc-4.8.3)
コンパイラの最適化オプション: (例: -O3)
使用したMPIライブラリ: (例: openmpi-1.6.5)
その他特記事項:
--------------------------------------------------------------------------------

以上．
================================================================================
